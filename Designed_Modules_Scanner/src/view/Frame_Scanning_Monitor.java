/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import database_resources.MySQL;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import model.Parts;
import model.PartsTableModel;
import java.util.Vector;
import javax.swing.JOptionPane;

/**
 *
 * @author Gabão
 */
public class Frame_Scanning_Monitor extends javax.swing.JFrame {
    //Developer Variables declaration
    Vector conteudo_arq = new Vector();
    boolean flag_initialize;
    PartsTableModel tableModel = new PartsTableModel();
    //End of variables declaration
    
    
    /**
     * Creates new form Frame_Scanning_Monitor
     */
    public Frame_Scanning_Monitor() {
        flag_initialize = false;
        initComponents();
        jTable_scanning_results.setModel(tableModel);
        this._refresh_module_combobox();
        this._fill_progress_bar();
        flag_initialize = true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel_code_insertion = new javax.swing.JPanel();
        jTextField_barcode_insert = new javax.swing.JTextField();
        jLabel_button_add = new javax.swing.JLabel();
        jLabel_text_instructionsGUI = new javax.swing.JLabel();
        jPanel_parts_monitor = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_scanning_results = new javax.swing.JTable();
        jComboBox_modules = new javax.swing.JComboBox();
        jProgressBar_scanning_percentage_progress = new javax.swing.JProgressBar();
        jLabel_text_scanning_percentage_progress = new javax.swing.JLabel();
        jLabel_text_instructions_monitor = new javax.swing.JLabel();
        jLabel_text_scanning_progressbar_title = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel_button_voltar = new javax.swing.JLabel();
        jLabel_button_concluir = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel_code_insertion.setBackground(new java.awt.Color(44, 87, 115));

        jTextField_barcode_insert.setBackground(new java.awt.Color(255, 255, 255));
        jTextField_barcode_insert.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jTextField_barcode_insert.setForeground(new java.awt.Color(0, 0, 0));
        jTextField_barcode_insert.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_barcode_insertKeyPressed(evt);
            }
        });

        jLabel_button_add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons/icons8_add_50px.png"))); // NOI18N
        jLabel_button_add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_button_addMouseClicked(evt);
            }
        });

        jLabel_text_instructionsGUI.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel_text_instructionsGUI.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_text_instructionsGUI.setText("Insira o código aqui");

        javax.swing.GroupLayout jPanel_code_insertionLayout = new javax.swing.GroupLayout(jPanel_code_insertion);
        jPanel_code_insertion.setLayout(jPanel_code_insertionLayout);
        jPanel_code_insertionLayout.setHorizontalGroup(
            jPanel_code_insertionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_code_insertionLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel_code_insertionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel_text_instructionsGUI, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField_barcode_insert, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel_button_add)
                .addGap(305, 305, 305))
        );
        jPanel_code_insertionLayout.setVerticalGroup(
            jPanel_code_insertionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_code_insertionLayout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addGroup(jPanel_code_insertionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_code_insertionLayout.createSequentialGroup()
                        .addComponent(jLabel_text_instructionsGUI)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_barcode_insert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_code_insertionLayout.createSequentialGroup()
                        .addComponent(jLabel_button_add)
                        .addGap(29, 29, 29))))
        );

        jPanel_parts_monitor.setBackground(new java.awt.Color(32, 74, 100));

        jTable_scanning_results.setBackground(new java.awt.Color(255, 255, 255));
        jTable_scanning_results.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jTable_scanning_results.setForeground(new java.awt.Color(0, 0, 0));
        jTable_scanning_results.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable_scanning_results.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane1.setViewportView(jTable_scanning_results);

        jComboBox_modules.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox_modules.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jComboBox_modules.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox_modules.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_modulesItemStateChanged(evt);
            }
        });

        jLabel_text_scanning_percentage_progress.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel_text_scanning_percentage_progress.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_text_scanning_percentage_progress.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_text_scanning_percentage_progress.setText("0%");

        jLabel_text_instructions_monitor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel_text_instructions_monitor.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_text_instructions_monitor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_text_instructions_monitor.setText("Verifique na tabela, quais peças ainda faltam para serem escaneadas, de acordo com o módulo selecionado");

        jLabel_text_scanning_progressbar_title.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel_text_scanning_progressbar_title.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_text_scanning_progressbar_title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_text_scanning_progressbar_title.setText("Progresso do escaneamento");

        javax.swing.GroupLayout jPanel_parts_monitorLayout = new javax.swing.GroupLayout(jPanel_parts_monitor);
        jPanel_parts_monitor.setLayout(jPanel_parts_monitorLayout);
        jPanel_parts_monitorLayout.setHorizontalGroup(
            jPanel_parts_monitorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_parts_monitorLayout.createSequentialGroup()
                .addGroup(jPanel_parts_monitorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_parts_monitorLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel_parts_monitorLayout.createSequentialGroup()
                        .addGap(242, 242, 242)
                        .addComponent(jComboBox_modules, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel_parts_monitorLayout.createSequentialGroup()
                .addGroup(jPanel_parts_monitorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_parts_monitorLayout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(jLabel_text_instructions_monitor))
                    .addGroup(jPanel_parts_monitorLayout.createSequentialGroup()
                        .addGap(0, 272, Short.MAX_VALUE)
                        .addGroup(jPanel_parts_monitorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_parts_monitorLayout.createSequentialGroup()
                                .addComponent(jProgressBar_scanning_percentage_progress, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_parts_monitorLayout.createSequentialGroup()
                                .addComponent(jLabel_text_scanning_progressbar_title)
                                .addGap(106, 106, 106)))
                        .addComponent(jLabel_text_scanning_percentage_progress)
                        .addGap(101, 101, 101)))
                .addContainerGap(126, Short.MAX_VALUE))
        );
        jPanel_parts_monitorLayout.setVerticalGroup(
            jPanel_parts_monitorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_parts_monitorLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel_text_instructions_monitor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox_modules, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel_parts_monitorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel_parts_monitorLayout.createSequentialGroup()
                        .addComponent(jLabel_text_scanning_progressbar_title)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jProgressBar_scanning_percentage_progress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel_text_scanning_percentage_progress))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(24, 58, 79));

        jLabel_button_voltar.setFont(new java.awt.Font("Segoe UI", 0, 30)); // NOI18N
        jLabel_button_voltar.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_button_voltar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_button_voltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons/icons8_back_50px.png"))); // NOI18N
        jLabel_button_voltar.setText("  Voltar");
        jLabel_button_voltar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_button_voltarMouseClicked(evt);
            }
        });

        jLabel_button_concluir.setFont(new java.awt.Font("Segoe UI", 0, 30)); // NOI18N
        jLabel_button_concluir.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_button_concluir.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_button_concluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons/icons8_inspection_50px.png"))); // NOI18N
        jLabel_button_concluir.setText("  Concluir Verificação");
        jLabel_button_concluir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_button_concluirMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jLabel_button_voltar, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel_button_concluir, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_button_voltar)
                    .addComponent(jLabel_button_concluir))
                .addGap(44, 44, 44))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel_parts_monitor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel_code_insertion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel_code_insertion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel_parts_monitor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void _refresh_module_combobox(){
        
        jComboBox_modules.removeAllItems();
        try{
            MySQL database = new MySQL();
            Statement st = database.getConect().createStatement();
            String query_SQL = ("SELECT DISTINCT codigomodulo, descricaomodulo FROM `formasete`.`scannerpecas` where unidades != unidadeslidas;");
            st.executeQuery(query_SQL);
            ResultSet linhaSQL = st.getResultSet();
            
            while(linhaSQL.next()){
                if(linhaSQL.getString("descricaomodulo").equals("")){
                    jComboBox_modules.addItem(linhaSQL.getString("codigomodulo"));
                }else{
                    jComboBox_modules.addItem(linhaSQL.getString("codigomodulo") + " - " + linhaSQL.getString("descricaomodulo"));
                }
            }
            
            database.getConect().close();
            
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    private void _scan_part_code(){
        if(this._check_equals_code().equals("")){
            try{
                MySQL database = new MySQL();
                Statement st = database.getConect().createStatement();
                String query_SQL = ("SELECT * FROM `formasete`.`scannerpecas`;");
                st.executeQuery(query_SQL);
                ResultSet linhaSQL = st.getResultSet();
                boolean flag=false;
                while(linhaSQL.next()){
                    if(linhaSQL.getString("codigopeca").equals(jTextField_barcode_insert.getText())){
                        flag=true;

                        if(linhaSQL.getString("unidadeslidas").equals(linhaSQL.getString("unidades"))){
                            JOptionPane.showMessageDialog(null, "Já foram lidas todas as peças desse código!");
                            jTextField_barcode_insert.setText("");
                        }else{
                            int unidadeslidas = Integer.parseInt(linhaSQL.getString("unidadeslidas")) + 1;

                            query_SQL = ("UPDATE `formasete`.`scannerpecas` SET `unidadeslidas` = '" + unidadeslidas + "' WHERE (`codigopeca` = '" + jTextField_barcode_insert.getText() + "');");
                            st.executeUpdate(query_SQL);
                            JOptionPane.showMessageDialog(null, "Peça escaneada com sucesso!");
                            jTextField_barcode_insert.setText("");


                            if(this._check_validation()){
                                JOptionPane.showMessageDialog(null, "Todas as peças foram escaneadas! Agora conclua a validação.");
                                this._refresh_module_combobox();
                                this._remove_all_itens_table();
                            }else{
                                this._refresh_module_combobox();
                            }
                            break;
                        }

                    }
                }

                if(!flag){
                    JOptionPane.showMessageDialog(null, "Não existe código correspondente no arquivo! Tente escanear outro código.");
                    jTextField_barcode_insert.setText("");
                }

                database.getConect().close();
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }
    
    private void _fill_progress_bar(){
        try{
            MySQL database = new MySQL();
            Statement st = database.getConect().createStatement();
            String query_SQL = ("SELECT * FROM `formasete`.`scannerpecas`;");
            st.executeQuery(query_SQL);
            ResultSet linhaSQL = st.getResultSet();
            
            int cont_unidades = 0;
            int cont_unidadeslidas = 0;
            
            while(linhaSQL.next()){ //Soma pra depois fazer a porcentagem de quantos foram lidos
                cont_unidades = cont_unidades + linhaSQL.getInt("unidades");
                cont_unidadeslidas = cont_unidadeslidas + linhaSQL.getInt("unidadeslidas");
            }
            
            int porcentagem = (cont_unidadeslidas * 100) / cont_unidades;
            this.jProgressBar_scanning_percentage_progress.setValue(porcentagem);
            this.jLabel_text_scanning_percentage_progress.setText(porcentagem + "%");
            
            database.getConect().close();
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    public void _refresh_table(){
        
        this._remove_all_itens_table();
        
        try{
            MySQL database = new MySQL();
            Statement st = database.getConect().createStatement();
            
            int j = 0;
            String codigomodulo;
            if(jComboBox_modules.getSelectedItem().toString().equals("Componentes")){
                codigomodulo = jComboBox_modules.getSelectedItem().toString();
            }else{
                while(jComboBox_modules.getSelectedItem().toString().charAt(j) != ' '){
                    j++;
                }
                codigomodulo = jComboBox_modules.getSelectedItem().toString().substring(0, j);
            }
            
            String query_SQL = ("SELECT * FROM `formasete`.`scannerpecas` where codigomodulo = '" + codigomodulo + "' and unidades != unidadeslidas;");
            st.executeQuery(query_SQL);
            ResultSet linhaSQL = st.getResultSet();
            
            
            while(linhaSQL.next()){
                Parts p = new Parts();
                //JOptionPane.showMessageDialog(null, linhaSQL.getString("codigopeca"));
                p.setDescricaopeca(linhaSQL.getString("descricaopeca"));
                p.setCodigopeca(linhaSQL.getString("codigopeca"));
                p.setUnidades(Integer.parseInt(linhaSQL.getString("unidades")));
                p.setUnidades_lidas(Integer.parseInt(linhaSQL.getString("unidadeslidas")));
                tableModel.addRow(p);
            }
            
            database.getConect().close();
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
        
    }
    
    private void _remove_all_itens_table(){
        while(jTable_scanning_results.getRowCount() > 0){
            tableModel.removeData(0);
        }
    }
    
    private void _remove_all_data_database(){
        try{
            MySQL database = new MySQL();
            Statement st = database.getConect().createStatement();
            
            String query_SQL = ("TRUNCATE TABLE `formasete`.`scannerpecas`;");
            st.execute(query_SQL);
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    private String _check_equals_code(){
        
        Vector lista_modulos = new Vector();
        int cont_pecas=0;
        
        try{
            MySQL database = new MySQL();
            Statement st = database.getConect().createStatement();
            
            String query_SQL = ("SELECT * FROM `formasete`.`scannerpecas`;");
            st.executeQuery(query_SQL);
            ResultSet linhaSQL = st.getResultSet();
            
            while(linhaSQL.next()){
                if(linhaSQL.getString("codigopeca").equals(jTextField_barcode_insert.getText())){
                    lista_modulos.addElement(linhaSQL.getString("codigomodulo"));
                    cont_pecas++;
                }
            }
            database.getConect().close();
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
        
        if(cont_pecas > 1){
            Frame_Select_Distinct_Module janela = new Frame_Select_Distinct_Module(jTextField_barcode_insert.getText());
            if(janela._getItemCount() >= 1){
                this.dispose();
                janela.setLocationRelativeTo(null);
                janela.setVisible(true);
            }else{
                JOptionPane.showMessageDialog(null, "Já foram lidas todas as peças desse código!");
                janela.dispose();
            }
            return("q");
        }else{
            return("");
        }
    }

    private boolean _check_validation(){    //Método que verifica se todas as peças foram efetivamente lidas nas suas quantidades específicas
        try{
            MySQL database = new MySQL();
            Statement st = database.getConect().createStatement();
            
            String query_SQL = ("SELECT unidades, unidadeslidas FROM `formasete`.`scannerpecas`;");
            st.executeQuery(query_SQL);
            ResultSet linhaSQL = st.getResultSet();
            
            while(linhaSQL.next()){
                if(linhaSQL.getInt("unidades") != linhaSQL.getInt("unidadeslidas")){
                    return(false);
                }
            }
            database.getConect().close();
            return(true);
            
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
        return(false);
    }
    
    private void jLabel_button_voltarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_button_voltarMouseClicked
        Frame_Menu window = new Frame_Menu();
        window.setLocationRelativeTo(null);
        window.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel_button_voltarMouseClicked

    private void jLabel_button_concluirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_button_concluirMouseClicked
        if(this._check_validation()){
            this._remove_all_data_database();
            Frame_Verified window = new Frame_Verified();
            window.setLocationRelativeTo(null);
            window.setVisible(true);
            this.dispose();
        }else{
            JOptionPane.showMessageDialog(null, "Ainda não foram lidas todas as peças! Verifique quais peças ainda faltam!");
        }
    }//GEN-LAST:event_jLabel_button_concluirMouseClicked

    private void jLabel_button_addMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_button_addMouseClicked
        if(jTextField_barcode_insert.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Escaneie um código antes de adicioná-lo a contagem.");
        }else{
            this._scan_part_code();
            this._fill_progress_bar();
        }
    }//GEN-LAST:event_jLabel_button_addMouseClicked

    private void jComboBox_modulesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_modulesItemStateChanged
        if(jComboBox_modules.getItemCount()>0){
            this._refresh_table();
        }else{
            this._remove_all_itens_table();
        }
    }//GEN-LAST:event_jComboBox_modulesItemStateChanged

    private void jTextField_barcode_insertKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_barcode_insertKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this._scan_part_code();
        }
    }//GEN-LAST:event_jTextField_barcode_insertKeyPressed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jComboBox_modules;
    private javax.swing.JLabel jLabel_button_add;
    private javax.swing.JLabel jLabel_button_concluir;
    private javax.swing.JLabel jLabel_button_voltar;
    private javax.swing.JLabel jLabel_text_instructionsGUI;
    private javax.swing.JLabel jLabel_text_instructions_monitor;
    private javax.swing.JLabel jLabel_text_scanning_percentage_progress;
    private javax.swing.JLabel jLabel_text_scanning_progressbar_title;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel_code_insertion;
    private javax.swing.JPanel jPanel_parts_monitor;
    private javax.swing.JProgressBar jProgressBar_scanning_percentage_progress;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_scanning_results;
    private javax.swing.JTextField jTextField_barcode_insert;
    // End of variables declaration//GEN-END:variables
}
